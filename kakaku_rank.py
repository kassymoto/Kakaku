# -*- coding: utf-8 -*-
"""kakaku_rank.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12XIm3G0h5QtZ09qBo-5jsPAo66nGRPdv
"""

# -*- coding: utf-8 -*-

"""
価格コムのあるカテゴリのランキングのURLを指定すると、
そのランキングの上位N個（多分40個まで）の価格推移のグラフを描画する。
"""

#もろもろのインポート
import requests
from bs4 import BeautifulSoup
from datetime import datetime

#データを格納するためのクラス
class Kakaku:
  url = ""
  price = []
  date = []
  title = ""

#上位何個を表示するか
top = 5

#ランキングのURL
rank_url = requests.get('http://kakaku.com/pc/pc-memory/ranking_0520/spec=101-6/')
soup = BeautifulSoup(rank_url.content, "html.parser")

#ランキングのページから各商品のURLを引っこ抜く
urls = []
num = 0
for i in soup.find_all("a", class_="withIcnLimited"):
  #価格推移グラフのURLは商品のURLにpricehistoryを追加したものである。
    urls.append(str(i.get("href")) + "pricehistory/")
    num+=1
    #指定した個数になったら終了する。
    if num==top:
      break
      
#上記ループで取得したURLは文字列なので、これを使ってrequestsする
url = []
for i in urls:
    url.append(requests.get(i))

#URLをインスタンスに登録していく
kakaku_list = []
for i in url:
  kakaku_tmp = Kakaku()
  kakaku_tmp.url = i
  kakaku_list.append(kakaku_tmp)

rank = 1
for kakaku in kakaku_list:
    soup = BeautifulSoup(kakaku.url.content, "html.parser")
    
    date = soup.find_all("td", class_="alignL")
    price = soup.find_all("td", class_="alignR itemviewColor06")
    
    title = soup.find("title").string.split(" ")[2:-1:]
    kakaku.title = str(rank) + ": " + str(" ".join(title))
    rank+=1
    
    date_tmp = []
    price_tmp = []
    
    for i,j in zip(date[0::2],price):
        if(str(i.string)=="現在"):
            date_tmp.append(datetime.now().strftime('%Y-%m-%d'))
        else:
            date_tmp.append("".join(str(i.string).split(" ")[:-1:]).replace("年","-").replace("月","-").replace("日",""))
        price_tmp.append(int(str(j.string[1::]).replace(',','')))
    
    kakaku.date = date_tmp
    kakaku.price = price_tmp

""" 
for i in kakaku_list:
    print(i.title)
    for j,k in zip(i.date,i.price):
        print(j,k)
    print()
"""

import pandas as pd
kakaku_Title = []
kakaku_Date = []
kakaku_Price = []

for i in kakaku_list:
    for j in range(len(i.date)):
        kakaku_Title.append(i.title)
    kakaku_Date += i.date
    kakaku_Price += i.price

kakaku_data = pd.DataFrame(
        {"Title":kakaku_Title,
         "Date":kakaku_Date,
         "Price":kakaku_Price})

#print(kakaku_data)



import altair as alt

alt.Chart(kakaku_data, height=500 ,width=700).configure_legend(labelLimit=0).mark_line().encode(
        x="Date:T",
        y="Price:Q",
        color=alt.Color('Title', legend=alt.Legend(title="Title", orient='right'))
        )